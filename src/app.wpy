<style lang="less">
  @import './styles/base.less';
  page{
    font-size: 14px;
    background-color: #f2f2f2;
    color: #333;
  }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/shops',
      'pages/index',
      'pages/my',
      'pages/goods'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      selectedColor: '#E75999',
      list: [
        {
          pagePath: 'pages/index',
          text: '超级福利',
          iconPath: 'images/gift.png',
          selectedIconPath: 'images/gift_on.png'
        },
        {
          pagePath: 'pages/shops',
          text: '精选店铺',
          iconPath: 'images/shop.png',
          selectedIconPath: 'images/shop_on.png'
        },
        {
          pagePath: 'pages/my',
          text: 'VIP',
          iconPath: 'images/vip.png',
          selectedIconPath: 'images/vip_on.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }
  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
    this.intercept('request', {
      // 发出请求时的回调函数
      config (p) {
        // 对所有request请求中的OBJECT参数对象统一附加时间戳属性
        // p.timestamp = +new Date()
        // console.log('config request: ', p)
        // 必须返回OBJECT参数对象，否则无法发送请求到服务端
        return p
      },
      // 请求成功后的回调函数
      success (p) {
        // 可以在这里对收到的响应数据对象进行加工处理
        // console.log('request success: ', p)
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p.data
      },
      // 请求失败后的回调函数
      fail (p) {
        // console.log('request fail: ', p)
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      },
      // 请求完成时的回调函数(请求成功或失败都会被执行)
      complete (p) {
        // console.log('request complete: ', p)
        return p
      }
    })
  }

  onLaunch() {

  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
